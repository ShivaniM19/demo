creating a file using git bash and adding content in it-
     echo "# creating a file using git bash and adding content in it" >>new.txt
         
     cat new.txt

adding origin-
     git branch -M main
     ssh-keygen -o
     cd
     ls -a
     $ cd .ssh
     ls -a
     cat id_ed25519.pub
     ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIO0Hn8RJeG58pJ9aywSwFx94/2PkzIFG3b1tmzafy8BY Hp@DESKTOP-S668NVE
     cd
     cd "Desktop/practice/Git"
     $ git remote add origin git@github.com:ShivaniM19/demo.git
     git push -u origin main

creating tag-
     git remote -v
     git tag
     git tag -a v1.0 -m "version 1"
     git push origin v1.0
     git show v1.0

clonning a repository-
     cd
     ls -la
     gti clone ssh_url
     git clone ssh_url .
     git log --pretty=oneline

Branch in git-
     git branch
     git branch feature1
     git checkout -b feature1 or git switch -c feature1   
     git switch main or git checkout main
     git branch -d feature1 or git branch --delete feature1
     git switch -

If we are on feature1 branch and want to push code to remote repository-
     git push origin feature1

delete branch from remote repository
     git push origin --delete <branchname>

If we want ro merge new branch with main branch-
     git merge new

Git stash- if we are made changes in new branch and dont want to commit changes but want to switch branch
use stash:-
  git stash
  git stash list
  git stash apply

If Conflict appear during merge
     git checkout main
     git pull origin main
     git merge new-branch
# Resolve conflicts if any
     git add <file-with-conflict>
     git commit -m "Merged new-branch into main"
     git push origin main
f you want to merge without creating a merge commit (fast-forward merge), you can use-
     git merge --ff new-branch.
To undo changes in a specific file:
     git status
     git checkout -- <file-name>
              or
     git restore <file-name>

To undo changes in all unstaged files:
     git checkout .
     git checkout -- .
         or
     git restore .
             
To merge the main branch into a new branch in Git-
 1. Make sure your local repository is up to date with the remote repository:
     git checkout main
     git pull origin main

 2. Switch to the new branch that you want to merge the main branch into.
     git checkout new-branch

 3. Merge the main branch into your new branch:
     git merge main

 4. Resolve Any Merge Conflicts:
     git add <file-with-conflict>

 5. After resolving any conflicts, complete the merge by committing the changes:
     git commit -m "Merged main into new-branch"

 6. If you want to push the updated new branch to the remote repository, you can do so with(Optional):
     git push origin new-branch

 7. If you want to merge without creating a merge commit (fast-forward merge), you can use:
      git merge --ff main
 8. If you want to keep the history of the main branch, you can use:
     git merge --no-ff main