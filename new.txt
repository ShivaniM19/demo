creating a file using git bash and adding content in it-
     echo "# creating a file using git bash and adding content in it" >>new.txt
         
     cat new.txt

adding origin-
     git branch -M main
     ssh-keygen -o
     cd
     ls -a
     $ cd .ssh
     ls -a
     cat id_ed25519.pub
     ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIO0Hn8RJeG58pJ9aywSwFx94/2PkzIFG3b1tmzafy8BY Hp@DESKTOP-S668NVE
     cd
     cd "Desktop/practice/Git"
     $ git remote add origin git@github.com:ShivaniM19/demo.git
     git push -u origin main

creating tag-
     git remote -v
     git tag
     git tag -a v1.0 -m "version 1"
     git push origin v1.0
     git show v1.0

clonning a repository-
     cd
     ls -la
     gti clone ssh_url
     git clone ssh_url .
     git log --pretty=oneline

Branch in git-
     git branch
     git branch feature1
     git checkout -b feature1 or git switch -c feature1   
     git switch main or git checkout main
     git branch -d feature1 or git branch --delete feature1
     git switch -

If we are on feature1 branch and want to push code to remote repository-
     git push origin feature1

delete branch from remote repository
     git push origin --delete <branchname>

If we want ro merge new branch with main branch-
     git merge new

Git stash- if we are made changes in new branch and dont want to commit changes but want to switch branch
use stash:-
  git stash
  git stash list
  git stash apply

conflict with merge


git rebase -
     1.git switch new
     2.change in new branch 
     3.git add . and git commit -m "message"
     4.git switch main
     5.change in main branch
     6.git add . and git commit -m "message"
     7.git rebase new
# Git Commands and Best Practices

## Creating a File and Adding Content

```bash
# Create a new file using Git Bash and add content
echo "# Creating a file using Git Bash and adding content" >> new.txt

# Verify the file content
cat new.txt
```

## Adding Origin and Pushing Changes

```bash
# Set the main branch
git branch -M main

# Generate SSH key
ssh-keygen -o

# Navigate to the .ssh directory
cd ~/.ssh

# List the SSH keys
ls -a

# Copy the public key
cat id_ed25519.pub

# Add the origin remote repository
git remote add origin git@github.com:ShivaniM19/demo.git

# Push changes to the main branch
git push -u origin main
```

## Creating a Tag

```bash
# Verify the remote repository
git remote -v

# List existing tags
git tag

# Create a new tag
git tag -a v1.0 -m "version 1"

# Push the tag to the remote repository
git push origin v1.0

# Display tag information
git show v1.0
```

## Cloning a Repository

```bash
# Clone a repository using the SSH URL
git clone ssh_url

# Clone a repository into the current directory
git clone ssh_url .

# Display commit history
git log --pretty=oneline
```

## Branching in Git

```bash
# List existing branches
git branch

# Create a new branch
git branch feature1

# Switch to the new branch
git switch -c feature1

# Switch back to the main branch
git switch main

# Delete the feature branch
git branch -d feature1

# Switch to the previous branch
git switch -
```

## Pushing Changes to a Remote Repository

```bash
# Push changes to the feature branch
git push origin feature1
```

## Deleting a Branch from a Remote Repository

```bash
# Delete the feature branch from the remote repository
git push origin --delete feature1
```

## Merging Branches

```bash
# Merge the new branch with the main branch
git merge new
```

## Git Stash

```bash
# Stash changes in the current branch
git stash

# List stashed changes
git stash list

# Apply stashed changes
git stash apply
```

## Conflict Resolution with Merge

```bash
# Resolve conflicts manually
# Use git status to identify conflicting files
# Edit the conflicting files to resolve the conflicts
# Use git add to stage the resolved files
# Use git commit to commit the resolved changes
```

## Git Rebase

```bash
# Switch to the new branch
git switch new

# Make changes in the new branch
# Use git add to stage the changes
# Use git commit to commit the changes

# Switch to the main branch
git switch main

# Make changes in the main branch
# Use git add to stage the changes
# Use git commit to commit the changes

# Rebase the new branch onto the main branch
git rebase main
```